# For this project, I downloaded Spotify data from Kaggle. 
# (Source: https://www.kaggle.com/datasets/equinxx/spotify-top-50-songs-in-2021?select=spotify_top50_2021.csv)
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

# Creating the table: 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

# Then I inserted the Spotify Data .csv into the table.

# Next, I explored the data using the following SQL. 

#1. What is the average danceability by artist and track?
SELECT artist_name, track_name, AVG(danceability) AS average_danceability
FROM Spotifydata
GROUP BY artist_name, track_name;

#2. Who are the top 10 artists based on popularity?
SELECT artist_name, popularity
FROM Spotifydata
ORDER BY popularity DESC
LIMIT 10;

#3. What artist released the longest song?
SELECT artist_name, track_name, duration_ms
FROM Spotifydata
ORDER BY duration_ms DESC
LIMIT 1;

SELECT artist_name, track_name, duration_ms
FROM Spotifydata
WHERE duration_ms IN (SELECT MAX(duration_ms) FROM Spotifydata);

#4. What's the average danceability for the 10 most popular songs?
SELECT AVG(danceability) AS average_danceability
FROM Spotifydata
WHERE track_name IN (SELECT track_name FROM Spotifydata ORDER BY popularity DESC LIMIT 10);

#5. How many tracks in the dataset have a popularity score above 80?
SELECT COUNT(track_name) AS num_tracks
FROM Spotifydata
WHERE popularity>80;

#6. What is the average danceability score for tracks with an energy level above 0.7?
SELECT AVG(danceability) AS average_danceability
FROM Spotifydata
WHERE energy>0.7;

#7. Which artist has the track with the highest valence score?
SELECT artist_name, track_name, valence
FROM Spotifydata
ORDER BY valence DESC
LIMIT 1;

SELECT artist_name, track_name, valence
FROM Spotifydata
WHERE valence = (SELECT MAX(valence) FROM Spotifydata);

#8. How many tracks have a tempo greater than 120 BPM (beats per minute) and a duration longer than 3 minutes?
SELECT COUNT(track_name) AS num_tracks
FROM Spotifydata
WHERE tempo>120 AND duration_ms>3*60000;

#9. What is the average loudness of tracks with a popularity score between 50 and 70 (inclusive)?
SELECT AVG(loudness) AS average_loudness
FROM Spotifydata
WHERE popularity>=50 AND popularity<=70;

#10. Which track has the highest instrumentalness value?
SELECT track_name, instrumentalness
FROM Spotifydata
ORDER BY instrumentalness DESC
LIMIT 1;

SELECT track_name, instrumentalness
FROM Spotifydata
WHERE instrumentalness = (SELECT MAX(instrumentalness) FROM Spotifydata);

#11. Among the top 10 artists based on popularity, which artist has the highest average valence score for their tracks?
SELECT artist_name, AVG(valence) AS average_valence
FROM Spotifydata
WHERE artist_name IN (
    SELECT artist_name 
    FROM Spotifydata 
    ORDER BY popularity DESC 
    LIMIT 10
    )
GROUP BY artist_name
ORDER BY AVG(valence) DESC
LIMIT 1;

